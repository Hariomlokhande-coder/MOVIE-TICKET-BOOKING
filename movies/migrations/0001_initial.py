# Generated by Django 4.2.7 on 2025-10-05 16:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import movies.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Seat number must be positive')])),
                ('status', models.CharField(choices=[('booked', 'Booked'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='booked', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('booking_reference', models.CharField(blank=True, max_length=20, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('duration_minutes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Duration must be at least 1 minute'), django.core.validators.MaxValueValidator(600, 'Duration cannot exceed 10 hours')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rating', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_name', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField(validators=[movies.models.validate_future_datetime])),
                ('total_seats', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Must have at least 1 seat'), django.core.validators.MaxValueValidator(1000, 'Cannot exceed 1000 seats')])),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shows', to='movies.movie')),
            ],
            options={
                'ordering': ['date_time'],
            },
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['title'], name='movies_movi_title_652549_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['created_at'], name='movies_movi_created_619207_idx'),
        ),
        migrations.AddField(
            model_name='booking',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='movies.show'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='show',
            index=models.Index(fields=['movie', 'date_time'], name='movies_show_movie_i_fd5e80_idx'),
        ),
        migrations.AddIndex(
            model_name='show',
            index=models.Index(fields=['date_time'], name='movies_show_date_ti_bef2e4_idx'),
        ),
        migrations.AddIndex(
            model_name='show',
            index=models.Index(fields=['screen_name', 'date_time'], name='movies_show_screen__91a630_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='show',
            unique_together={('screen_name', 'date_time')},
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user', 'status'], name='movies_book_user_id_9b70b3_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['show', 'status'], name='movies_book_show_id_e1d460_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['created_at'], name='movies_book_created_da0c95_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_reference'], name='movies_book_booking_bfea63_idx'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'booked')), fields=('show', 'seat_number'), name='unique_active_booking_per_seat'),
        ),
    ]
